---
import Layout from '../../layouts/Layout.astro';
import ThemeToggle from '../../components/ThemeToggle.astro';

import HeroBanner from '../../components/HeroBanner.astro';
import PostList from '../../components/PostList.astro';
import EpisodeCard from '../../components/EpisodeCard.astro';
import { getCollection } from 'astro:content';
import podcastConfig from "../../../podcast.config.json";
import { SITE_INFO } from '../../consts';
import { htmlToText } from 'html-to-text';
import { optimizeImage } from '../../utils/imageProcessor';

let processedEpisodes:any = [];

const episodes = (await getCollection('podcast')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

//optimizeImage is an async function, so it must be called with await, which can only
//be done in an async function
async function preprocessPosts(posts) {
    for (const post of posts) {
    if (post.data.cover) {
      post.data.cover = await optimizeImage(post.data.cover,720,360);
    }
  }
	return posts;
}

processedEpisodes = await preprocessPosts(episodes); 
let data = {
	'title':` ${podcastConfig.name} | ${SITE_INFO.site_title}`,
	'description': SITE_INFO.podcast_description,
	'keywords': SITE_INFO.podcast_keywords
}
console.log(data);
---
<Layout data={data}>
<HeroBanner title="Welcome to Our Podcast" desc={SITE_INFO.podcast_description}/>
 <PostList>
		{
			processedEpisodes.map((episode) => (
			<EpisodeCard
				title={episode.data.title}
				cover={episode.data.cover}
				coveralt={episode.data.coverAlt}
				desc={htmlToText(episode.body.slice(0, 500))}
				url={"/podcast/" + episode.slug}
				audioUrl={episode.data.audioUrl}
				pubDate={episode.data.pubDate}
				duration={episode.data.duration}
				id={"card-" + episode.data.episode}
			/>
			))
		}
</PostList>
<ThemeToggle/>
</Layout>